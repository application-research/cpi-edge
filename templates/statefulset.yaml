{{- $sizeConfig := include "cpi-edge.getSizeConfig" . | fromYaml }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.global.customer.name }}-{{ .Values.product }}
  namespace: customer-{{ .Values.global.customer.name }}
  annotations:
    argocd.argoproj.io/sync-wave: "10"
  labels:
    app: {{ .Values.global.customer.name }}-{{ .Values.product }}
spec:
  serviceName: {{ .Values.global.customer.name }}-{{ .Values.product }}
  podManagementPolicy: "Parallel"
  replicas: 3
  selector:
    matchLabels:
      app: {{ .Values.global.customer.name }}-{{ .Values.product }}
  template:
    metadata:
      labels:
        app: {{ .Values.global.customer.name }}-{{ .Values.product }}
      annotations:
        kubernetes.io/ingress-bandwidth: {{ $sizeConfig.ingressBandwidth }}
        kubernetes.io/egress-bandwidth: {{ $sizeConfig.egressBandwidth }}
    spec:
      initContainers:
      - name: symlink-templates
        image: busybox:latest
        command: [ "ln", "-nsf", "/app/templates", "/data/templates" ]
        volumeMounts:
        - name: {{ .Values.global.customer.name }}-{{ .Values.product }}-db
          mountPath: /data
      containers:
      - name: {{ .Values.product }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        workingDir: /data
        command: ["/app/edge", "daemon"]
        envFrom:
          - configMapRef:
              name: {{ .Values.global.customer.name }}-{{ .Values.product }}-config
        #command: ["/bin/sh", "-c", "while true; do sleep 30; done"]
        ports:
          - name: edge-http
            containerPort: 1414
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /ping
            port: edge-http
        resources:
          limits:
            cpu: "{{ $sizeConfig.cpuLimit }}"
            memory: "{{ $sizeConfig.memoryLimit }}"
          requests:
            cpu: "{{ $sizeConfig.cpuRequest }}"
            memory: "{{ $sizeConfig.memoryRequest }}"
        volumeMounts:
          - name: storage
            mountPath: /storage
          - name: {{ .Values.global.customer.name }}-{{ .Values.product }}-db
            mountPath: /data
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: {{ .Values.global.customer.name }}-{{ .Values.product }}-storage
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.global.customer.name }}-{{ .Values.product }}-db
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "1Gi"
